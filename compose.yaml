version: '3.9'
services:
  app-main:
    build:
      context: .
      dockerfile: main/Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:19092
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    restart: unless-stopped
    networks:
      - crm-network

  app-openai:
    build:
      context: .
      dockerfile: openai/Dockerfile
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:19092
      - OPENAI_KEY=${OPENAI_KEY}
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - crm-network

  app-mail:
    build:
      context: .
      dockerfile: mail/Dockerfile
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:19092
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - crm-network

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped
    networks:
      - crm-network

  zoo:
    image: confluentinc/cp-zookeeper:7.8.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888
    networks:
      - crm-network

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo
    networks:
      - crm-network

volumes:
  kafka-data:

networks:
  crm-network:
    external: true
